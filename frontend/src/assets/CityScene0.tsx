/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 CityScene0.glb --transform --types 
Files: CityScene0.glb [11.13MB] > /Users/normanqian/fractalcamp/gamesHackathon2/frontend/public/CityScene0-transformed.glb [2.81MB] (75%)
*/

import * as THREE from 'three'
import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, PerspectiveCamera } from '@react-three/drei'
import { GLTF, SkeletonUtils } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ['SM_barrel_01_(8)']: THREE.Mesh
    ['SM_lianas_01_(12)']: THREE.Mesh
    ['SM_lamp_city_(49)']: THREE.Mesh
    ['SM_car_destroyed_02_(14)']: THREE.Mesh
  }
  materials: {
    PaletteMaterial001: THREE.MeshStandardMaterial
    M_leaves_lianas: THREE.MeshStandardMaterial
    PaletteMaterial002: THREE.MeshStandardMaterial
    PaletteMaterial003: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { scene } = useGLTF('/CityScene0-transformed.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone) as GLTFResult
  return (
    <group {...props} dispose={null}>
      <pointLight intensity={9.488} decay={2} distance={10} color="#ffebce" position={[-31.38, 5.52, 44.52]} />
      <pointLight intensity={6.912} decay={2} distance={10} color="#ffebce" position={[-28.01, 5.31, 58.24]} />
      <pointLight intensity={11.153} decay={2} distance={11.86} color="#ffdba2" position={[21.45, -2.041, 32.03]} />
      <pointLight intensity={3.142} decay={2} distance={10} position={[-30.164, 13.581, -1.754]} />
      <PerspectiveCamera makeDefault={false} far={1000} near={0.3} fov={60} position={[-16.26, 12.881, 52.316]} rotation={[0.186, 0.792, -0.149]} />
      <directionalLight intensity={4.712} decay={2} color="#ffe1b3" position={[104.607, 5.387, 241.63]} rotation={[-2.197, 0.332, 2.718]} target={nodes.Directional_Light_Orientation.target}>
        <primitive object={nodes.Directional_Light_Orientation.target} position={[0, 0, -1]} />
      </directionalLight>
      <directionalLight intensity={1.257} decay={2} color="#f1dfbb" position={[104.607, 5.387, 241.63]} rotation={[-1.006, -0.435, -0.587]} target={nodes['Directional_Light_(1)_Orientation'].target}>
        <primitive object={nodes['Directional_Light_(1)_Orientation'].target} position={[0, 0, -1]} />
      </directionalLight>
      <mesh geometry={nodes['SM_barrel_01_(8)'].geometry} material={materials.PaletteMaterial001} position={[19.96, 2.474, 37.34]} rotation={[0, 0.922, 0]} />
      <mesh geometry={nodes['SM_lianas_01_(12)'].geometry} material={materials.M_leaves_lianas} position={[-31.898, 16.421, -0.708]} rotation={[Math.PI, 1.025, -Math.PI]} scale={0.464} />
      <mesh geometry={nodes['SM_lamp_city_(49)'].geometry} material={materials.PaletteMaterial002} position={[-33.414, 4.197, 40.905]} scale={0.9} />
      <mesh geometry={nodes['SM_car_destroyed_02_(14)'].geometry} material={materials.PaletteMaterial003} position={[15.511, 4.059, -15.492]} rotation={[-2.868, 1.564, -Math.PI]} />
    </group>
  )
}

useGLTF.preload('/CityScene0-transformed.glb')
